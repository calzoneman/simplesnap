// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, fs, path, winston;

  Promise = require('bluebird');

  fs = Promise.promisifyAll(require('fs'));

  path = require('path');

  winston = require('winston');

  module.exports = function(config, db) {
    var clearExpiredImages;
    clearExpiredImages = function() {
      var Image;
      Image = db.models.Image;
      return Image.query('where', 'expires', '<', Date.now()).fetchAll().then(function(collection) {
        return Promise.all(collection.models.map(function(image) {
          var file;
          file = path.join(config.storageDir, image.get('filename'));
          return fs.unlinkAsync(file).then(function() {
            return image.destroy();
          });
        }));
      }).then(function(results) {
        if (results.length > 0) {
          return winston.info('Deleted %d expired images', results.length);
        }
      })["catch"](function(err) {
        return winston.error('Error deleting expired images', err);
      });
    };
    clearExpiredImages();
    return setInterval(clearExpiredImages, config.deleteExpiredInterval);
  };

}).call(this);
